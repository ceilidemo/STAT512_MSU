knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(readxl)
library(mosaic)
library(remotes)
library(ggResidpanel)
library(easyalluvial)
library(emmeans)
library(patchwork)
library(plotly)
library(gtsummary)
library(lme4)
library(nlme)
library(lmerTest)
library(forcats)
webshot::install_phantomjs(force = T)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
#remotes::install_github("greenwood-stat/catstats2", force = T)
library(catstats2)
packageVersion("catstats2")
remotes::install_github("greenwood-stat/catstats2", force = T)
library(c
#remotes::install_github("greenwood-stat/catstats2", force = T)
library(catstats2)
packageVersion("catstats2")
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
#remotes::install_github("greenwood-stat/catstats2", force = T)
library(catstats2)
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
setwd("~/Library/CloudStorage/OneDrive-MontanaStateUniversity/MSU_courses/STAT512/Lab11")
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
GripStrengthMeasurements <- readxl::read_excel("GripStrengthMeasurementsS25.xlsx")
library(readxl)
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
remove.packages(readxl)
install.packages("readxl")
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(readxl)
library(mosaic)
library(remotes)
library(ggResidpanel)
library(easyalluvial)
library(emmeans)
library(patchwork)
library(plotly)
library(gtsummary)
library(lme4)
library(nlme)
library(lmerTest)
library(forcats)
#remotes::install_github("greenwood-stat/catstats2", force = T)
library(catstats2)
packageVersion("catstats2")
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
GS <- GripStrengthMeasurements %>% drop_na(GripStrength) #Mostly cleans out empty rows
library(mi)
r1 <- missing_data.frame(as.data.frame(GS))
table(r1@patterns)
tally(Hand~Arm, data = GS)
table(r1@patterns)
tally(Hand~Arm, data = GS)
GS2 <- GS %>% drop_na(Arm)
GS2 <- GS2 %>% mutate(Arm = forcats::fct_collapse(Arm,
Up = c("Up", "up"),
Down = c("Down", "down"),
"90" = c("90", "90 degree")),
SubjectID = forcats::fct_collapse(SubjectID,
MDEarl = c("MDEarl","MDEar")),
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order)
)
tally(~Arm, data = GS2)
tally(Arm ~ Hand, data = GS2)
GS2 %>% dplyr::select(Hand, Arm) %>% alluvial_wide(bin_labels = "mean", fill_by = "last_variable", bins = 6)
GS2 <- GS2 %>% mutate(Hand.Arm = factor(str_c(Hand, Arm)))
Spaghetti_GS2 <- GS2 %>% ggplot(mapping = aes(x = Hand.Arm, y = GripStrength, group = SubjectID)) +
geom_line(alpha = 0.3) +
geom_point(aes(color = Order), alpha = 0.7) +
scale_color_viridis_c(end = 0.8)
Spaghetti_GS2
Spaghetti_GS2 %>% ggplotly()
?fct_collapse
tally(~Arm, data = GS2)
tally(Arm ~ Hand, data = GS2)
tally(Arm ~ Hand, data = GS2)
View(GS2)
ggintplot(response = "GripStrength", groupvars = c("Hand", "Arm"), data = GS2)
lmer1 <- lmer(GripStrength ~ Hand*Arm + (1|SubjectID), data = GS2)
Anova(lmer1, test.statistic = "F")
model_diagram(lmer1, heightVal = 800)
resid_interact(lmer1, c("resid", "qq", "yvp", "hist"))
model_diagram(lmer1, heightVal = 800)
dim(GS2)
Demographics <- read_excel("DemographicsS25.xlsx")
Demographics <- read_excel("DemographicsS25.xlsx")
Demographics <- Demographics %>% dplyr::select(-c(12:13)) #Because of a "note" left in column 13...
dim(Demographics)
View(Demographics)
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
which(sort(unique(GS2$SubjectID)) != sort(unique(Demographics$SubjectID)))
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
which(sort(unique(GS2$SubjectID)) != sort(unique(Demographics$SubjectID)))
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
Weights = forcats::fct_collapse(Weights,
Yes = c("yes", "Yes"),
No = c("no", "No")),
Climbing = forcats::fct_collapse(Climbing,
Yes = c("yes", "Yes"),
No = c("no", "No")),
PullUps = forcats::fct_collapse(PullUps,
Yes = c("yes", "Yes"),
No = c("no", "No")),
)
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order),
SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
Weights = forcats::fct_collapse(Weights,
Yes = c("yes", "Yes"),
No = c("no", "No")),
Climbing = forcats::fct_collapse(Climbing,
Yes = c("yes", "Yes"),
No = c("no", "No")),
PullUps = forcats::fct_collapse(PullUps,
Yes = c("yes", "Yes"),
No = c("no", "No")),
)
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(
Weights = factor(Weights),
Climbing = factor(Climbing),
PullUps = factor(PullUps),
SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
Weights = forcats::fct_collapse(Weights,
Yes = c("yes", "Yes"),
No = c("no", "No")),
Climbing = forcats::fct_collapse(Climbing,
Yes = c("yes", "Yes"),
No = c("no", "No")),
PullUps = forcats::fct_collapse(PullUps,
Yes = c("yes", "Yes"),
No = c("no", "No")),
)
#Check that problem was fixed:
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
b
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3)))
dim(combinedR)
tally(~SubjectID, data = combinedR)
View(combined)
unique(combinedR$SubjectID)
combinedR <- combinedR %>% mutate(
forearm_bins = fct_recode(forearm_bins,
low = "[9.25,10]",
medium = "(10,11]",
high = "(11,13.1]")
)
lmer2 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + (1|SubjectID), data = combinedR)
model_diagram(lmer2, heightVal = 800)
lmer2 %>% tbl_regression(intercept = T)
webshot::install_phantomjs(force = T)
Spaghetti_GS2 %>% ggplotly()
ggintplot(response = "GripStrength", groupvars = c("Hand", "Arm"), data = GS2)
lmer1 <- lmer(GripStrength ~ Hand*Arm + (1|SubjectID), data = GS2)
Anova(lmer1, test.statistic = "F")
dim(GS2)
263/7
Demographics <- Demographics %>% dplyr::select(-c(12:13)) #Because of a "note" left in column 13...
dim(Demographics)
dim(GS2)
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
Demographics <- Demographics %>% mutate(Weights = factor(Weights))
Demographics <- Demographics %>% mutate(Weights = fct_collapse(Weights,                                                              no = c("no",  "No"),
yes = c("yes", "Yes")))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3)))
dim(combinedR)
tally(~SubjectID, data = combinedR)
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
SubjectID =
forcats::fct_recode(SubjectID, CenntenialWarriors = "CentennialWarriors"))
#Check that problem was fixed:
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
Demographics <- Demographics %>% mutate(Weights = factor(Weights))
Demographics <- Demographics %>% mutate(Weights = fct_collapse(Weights,                                                              no = c("no",  "No"),
yes = c("yes", "Yes")))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3)))
dim(combinedR)
unique(combinedR$SubjectID)
tally(~SubjectID, data = combinedR)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(readxl)
library(mosaic)
library(remotes)
library(ggResidpanel)
library(easyalluvial)
library(emmeans)
library(patchwork)
library(plotly)
library(gtsummary)
library(lme4)
library(nlme)
library(lmerTest)
library(forcats)
webshot::install_phantomjs(force = T)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
dim(GS2)
Demographics <- read_excel("DemographicsS25.xlsx")
Demographics <- Demographics %>% dplyr::select(-c(12:13)) #Because of a "note" left in column 13...
dim(Demographics)
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
which(sort(unique(GS2$SubjectID)) != sort(unique(Demographics$SubjectID)))
which(sort(unique(GS2$SubjectID)) != sort(unique(Demographics$SubjectID)))
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
SubjectID =
forcats::fct_recode(SubjectID, CenntenialWarriors =
"CentennialWarriors"))
#Check that problem was fixed:
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
Demographics <- Demographics %>% mutate(Weights = fct_collapse(Weights,                                                              no = c("no",  "No"),
yes = c("yes", "Yes")))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3)))
dim(combinedR)
dim(GS2)
dim(combined)
dim(combinedR)
unique(combinedR$SubjectID)
combinedR <- combinedR %>% mutate(
forearm_bins = fct_recode(forearm_bins,
low = "[9.25,10]",
medium = "(10,11]",
high = "(11,13.1]")
)
lmer2 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + (1|SubjectID), data = combinedR)
model_diagram(lmer2, heightVal = 800)
?model_diagram
library(catstats)
library(catstats2)
model_diagram(lmer2, heightVal = 800)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(readxl)
library(mosaic)
library(remotes)
library(ggResidpanel)
library(easyalluvial)
library(emmeans)
library(patchwork)
library(plotly)
library(gtsummary)
library(lme4)
library(nlme)
library(lmerTest)
library(catstats2)
library(qqplotr)
webshot::install_phantomjs(force = T)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
GS <- GripStrengthMeasurements %>% drop_na(GripStrength) #Mostly cleans out empty rows
GS2 <- GS %>% drop_na(Arm)
GS2 <- GS2 %>% mutate(Arm = forcats::fct_collapse(Arm,
Up = c("Up", "up"),
Down = c("Down", "down"),
"90" = c("90", "90 degree")),
SubjectID = forcats::fct_collapse(SubjectID,
MDEarl = c("MDEarl","MDEar")),
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order)
)
GS2 <- GS2 %>% mutate(Hand.Arm = factor(str_c(Hand, Arm)))
GS2 <- GS %>% drop_na(Arm)
GS2 <- GS2 %>% mutate(Arm = forcats::fct_collapse(Arm,
Up = c("Up", "up"),
Down = c("Down", "down"),
"90" = c("90", "90 degree")),
SubjectID = forcats::fct_collapse(SubjectID,
MDEarl = c("MDEarl","MDEar")),
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order)
)
dim(GS2)
Demographics <- read_excel("DemographicsS25.xlsx")
Demographics <- Demographics %>% dplyr::select(-c(12:13)) #Because of a "note" left in column 13...
dim(Demographics)
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
which(sort(unique(GS2$SubjectID)) != sort(unique(Demographics$SubjectID)))
# Fix the problem in Demographics to match GS2:
Demographics <- Demographics %>% mutate(SubjectID =
forcats::fct_recode(SubjectID, LADeathGrips = "LADeath"),
SubjectID =
forcats::fct_recode(SubjectID, CenntenialWarriors =
"CentennialWarriors"))
#Check that problem was fixed:
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
Demographics <- Demographics %>% mutate(Weights = factor(Weights),
GripTesterID = factor(GripTesterID))
Demographics <- Demographics %>% mutate(Weights = fct_collapse(Weights,                                                              no = c("no",  "No"),
yes = c("yes", "Yes")))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3))
)
dim(combinedR)
dim(combined)
dim(GS2)
tally(~SubjectID, data = combinedR)
combinedR <- combinedR %>% mutate(
forearm_bins = fct_recode(forearm_bins,
low = "[9.25,10]",
medium = "(10,11]",
high = "(11,13.1]")
)
lmer2 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + (1|SubjectID), data = combinedR)
model_diagram(lmer2, heightVal = 800)
lmer2 %>% tbl_regression(intercept = T)
lmer2 %>% tbl_regression(intercept = T)
dim(GS2)
dim(combined)
unique(combinedR$SubjectID)
data.frame(sort(unique(GS2$SubjectID)), sort(unique(Demographics$SubjectID)))
lmer3 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + GripTesterID + (1|SubjectID), data = combinedR)
summary(lmer3)
136.66 / 136.66 + 23.33
136.66 / (136.66 + 23.33)
258.08 / (258.08 + 25.53)
ranef(lmer3)
library(lattice)
dotplot(ranef(lmer3, postVar = T))
as.data.frame(ranef(lmer3)) %>% ggplot(aes(sample = condval)) +
stat_qq_point(alpha = 0.6) +
stat_qq_line() + theme(aspect.ratio = 1) +
labs(x = "Theoretical Quantiles",
y = "Sample Quantiles",
title = "QQ-plot of random intercept of subject") +
coord_fixed()
dotplot(ranef(lmer3, postVar = T))
library(MuMIn)
r.squaredGLMM(lmer3)
View(GS2)
View(combinedR)
lmer4 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + GripTesterID + (1|SubjectID/GroupName), data = combinedR)
model_diagram(lmer4, heightVal = 800)
lmer4 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + GripTesterID + (1|GroupName/SubjectID), data = combinedR)
model_diagram(lmer4, heightVal = 800)
Anova(lmer4)
Anova(lmer4, test.statistic = "F")
model_diagram(lmer4, heightVal = 800)
Anova(lmer4, test.statistic = "F")
plot(allEffects(nm1))
plot(allEffects(lmer4))
model_diagram(lmer4, heightVal = 800)
ranef(lmer4)
library(lattice)
dotplot(ranef(lmer4, postVar = T))
as.data.frame(ranef(lmer4)) %>% ggplot(aes(sample = condval)) +
stat_qq_point(alpha = 0.6) +
stat_qq_line() + theme(aspect.ratio = 1) +
labs(x = "Theoretical Quantiles",
y = "Sample Quantiles",
title = "QQ-plot of random intercept of group") +
coord_fixed()
as.data.frame(ranef(lmer4)) %>% ggplot(aes(sample = condval)) +
stat_qq_point(alpha = 0.6) +
stat_qq_line() + theme(aspect.ratio = 1) +
labs(x = "Theoretical Quantiles",
y = "Sample Quantiles",
title = "QQ-plot of random intercept of subject") +
coord_fixed()
dotplot(ranef(lmer4, postVar = T))
