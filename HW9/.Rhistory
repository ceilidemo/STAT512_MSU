library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(catstats2)
library(ggResidpanel)
library(gtsummary)
library(mosaic)
library(lmerTest)
library(nlme)
library(DiagrammeRsvg)
library(easyalluvial)
library(MuMIn)
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(readxl)
library(mosaic)
library(remotes)
library(ggResidpanel)
library(easyalluvial)
library(emmeans)
library(patchwork)
library(plotly)
library(gtsummary)
library(lme4)
library(nlme)
library(lmerTest)
library(catstats2)
library(qqplotr)
library(lattice)
webshot::install_phantomjs(force = T)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
GripStrengthMeasurements <- read_excel("GripStrengthMeasurementsS25.xlsx")
GS <- GripStrengthMeasurements %>% drop_na(GripStrength) #Mostly cleans out empty rows
GS2 <- GS %>% drop_na(Arm)
GS2 <- GS2 %>% mutate(Arm = forcats::fct_collapse(Arm,
Up = c("Up", "up"),
Down = c("Down", "down"),
"90" = c("90", "90 degree")),
SubjectID = forcats::fct_collapse(SubjectID,
MDEarl = c("MDEarl","MDEar")),
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order)
)
GS2 <- GS2 %>% mutate(Hand.Arm = factor(str_c(Hand, Arm)))
GS2 <- GS %>% drop_na(Arm)
GS2 <- GS2 %>% mutate(Arm = forcats::fct_collapse(Arm,
Up = c("Up", "up"),
Down = c("Down", "down"),
"90" = c("90", "90 degree")),
SubjectID = forcats::fct_collapse(SubjectID,
MDEarl = c("MDEarl","MDEar")),
Arm = factor(Arm),
Hand = factor(Hand),
OrderF = factor(Order)
)
Demographics <- read_excel("DemographicsS25.xlsx")
Demographics <- Demographics %>% dplyr::select(-c(12:13)) #Because of a "note" left in column 13...
Demographics <- Demographics %>% mutate(SubjectID =
forcats::fct_recode(SubjectID,
LADeathGrips = "LADeath",
CenntenialWarriors = "CentennialWarriors")
)
Demographics <- Demographics %>% mutate(Weights = factor(Weights),
GripTesterID = factor(GripTesterID))
Demographics <- Demographics %>% mutate(Weights = fct_collapse(Weights,                                                              no = c("no",  "No"),
yes = c("yes", "Yes")))
#Join Demographics to the GS2 repeated measures data
combined <- left_join(x = GS2, y = Demographics, by = "SubjectID")
combinedR <- combined %>% drop_na()
combinedR <- combinedR %>% mutate(forearm_bins   =
factor(cut_number(ForearmLength, n = 3)),
epworth_bins =
factor(cut_number(Epworth, n = 3)),
balance_bins =
factor(cut_number(BalanceTime, n = 3))
)
combinedR <- combinedR %>% mutate(
forearm_bins = fct_recode(forearm_bins,
low = "[9.25,10]",
medium = "(10,11]",
high = "(11,13.1]")
)
lmer3 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + GripTesterID + (1|SubjectID), data = combinedR)
Uselman <- read_csv("Uselman_data.csv", na = "-")
UselmanR <- Uselman %>% dplyr::filter(Site == "South") %>%
mutate(Date = factor(Date)) %>%
dplyr::filter(Date == "16-May") %>%
mutate(SeedingStrat = factor(SeedingStrat),
Irrigation = factor(Irrigation),
GrassOrig = factor(GrassOrig),
Blockf = factor(Block),
logShrubDens25 = log(ShrubDens2016 + 0.025),
Block = factor(Block),
SubBlock = factor(SubBlock),
Plot = factor(Plot))
UselmanR <- UselmanR %>%  mutate(SeedingStrat = factor(SeedingStrat),
Irrigation = factor(Irrigation),
GrassOrig = factor(GrassOrig),
SeedingStrat.ShrubOrig = factor(str_c(SeedingStrat, ShrubOrig)),
SeedingStrat.ShrubOrig = forcats::fct_na_value_to_level(SeedingStrat.ShrubOrig, "V")
)
UselmanR %>%
dplyr::select(SeedingStrat, ShrubOrig, SeedingStrat.ShrubOrig) %>%
alluvial_wide()
model_diagram(lmerU4A)
lmerU4A <- lmer(logShrubDens25 ~ 1 +  (1|Block) + (1|SubBlock) + (1|Plot), data = UselmanR)
model_diagram(lmerU4A)
model_diagram(lmerU4)
lmerU4 <- lmer(logShrubDens25 ~ 1 +  (1|Block/SubBlock/Plot), data = UselmanR)
model_diagram(lmerU4)
Anova(lmer4, test.statistic = "F")
lmer4 <- lmer(GripStrength ~ Hand*Arm + forearm_bins + GripTesterID + (1|GroupName/SubjectID), data = combinedR)
Anova(lmer4, test.statistic = "F")
model_diagram(lmer4, heightVal = 800)
Anova(lmer4, test.statistic = "F")
ranef(lmer4)
dotplot(ranef(lmer4, postVar = T))
lmerU4 <- lmer(logShrubDens25 ~ 1 +  (1|Block/SubBlock/Plot), data = UselmanR)
lmerU4A <- lmer(logShrubDens25 ~ 1 +  (1|Block) + (1|SubBlock) + (1|Plot), data = UselmanR)
summary(lmerU4)
summary(lmerU4A)
UselmanR %>% dplyr::select(Block, SubBlock, Plot) %>% alluvial_wide(fill_by = "first_variable")
UselmanR <- UselmanR %>% mutate(PlotID = str_c(XXXXXXXXXXXXXXXXXX))
UselmanR <- UselmanR %>% mutate(PlotID = str_c(blcok, subblock, plot))
UselmanR <- UselmanR %>% mutate(PlotID = str_c(block, subblock, plot))
UselmanR <- UselmanR %>% mutate(PlotID = str_c(Block, Subblock, Plot))
UselmanR <- UselmanR %>% mutate(PlotID = str_c(Block, SubBlock, Plot))
UselmanR %>% dplyr::select(PlotID) %>% alluvial_wide(fill_by = "first_variable")
UselmanR %>% dplyr::select(Block, SubBlock, PlotID) %>% alluvial_wide(fill_by = "first_variable")
lmerSeed <- lmer(logShrubDens25 ~  SeedingStrat.ShrubOrig +  (1|Block) + (1|SubBlock) + (1|PlotID), data = UselmanR)
lmerInt <- lmer(logShrubDens25 ~  SeedingStrat.ShrubOrig*Irrigation +  (1|Block) + (1|SubBlock) + (1|PlotID), data = UselmanR)
summary(lmerInt)
lmerIntNest <- lmer(logShrubDens25 ~ SeedingStrat.ShrubOrig*Irrigation +  (1|Block/SubBlock/Plot), data = UselmanR)
model_diagram(lmerIntNest, heightVal = 800)
3*6
6*7
knitr::opts_chunk$set(message = FALSE,
warning = FALSE)
options(show.signif.stars = FALSE)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(car)
library(effects)
library(catstats2)
library(ggResidpanel)
library(gtsummary)
library(mosaic)
library(lmerTest)
library(nlme)
library(DiagrammeRsvg)
library(easyalluvial)
library(MuMIn)
theme_set(theme_bw()) #Prevents need for + theme_bw() in ggplots
library(tidyverse)
data(TendonData) #Version of data set from catstats2
tendon <- TendonData
tendon <- tendon %>%
rename(SubjectID = 'Subject ID',
Sex = 'Sex  (M=1)',
CurrPain = 'CurrPain (Y=1)',
WaisttoHip = 'Waist to Hip',
VISAA = 'VISA-A',
Neovascularization = 'Neovascularization (Doppler) (Y=1)',
HistoryPain = 'Hx Pain (Y=1)') %>%
mutate_if(is.character, as.factor) %>%
mutate(CurrPain = factor(CurrPain),
Neovascularization = factor(Neovascularization),
Sex = factor(Sex),
HistoryPain = factor(HistoryPain))
tendonna1 <- tendon %>% drop_na(CSA)
tendonna2 <- tendon %>% drop_na()
tendonna2 <- tendonna2 %>% mutate(
Sex = fct_recode(Sex,
"Female" = "0",
"Male" = "1"),
Location = factor(substr(SubjectID, 1, 3))
)
lm2 <- lm(PSFR ~ Sex, data = tendonna2)
summary(lm2)
lm2 %>% tbl_regression(intercept = T) %>% add_global_p()
View(tendonna2)
lmer <- lmer(PSFR ~ Sex + (1/SubjectID), data = tendonna2)
lmer <- lmer(PSFR ~ Sex + (1|SubjectID), data = tendonna2)
summary(lmer)
lmer %>% tbl_regression(intercept = T) %>% add_global_p()
summary(lmer)
lmer %>% tbl_regression(intercept = T) %>% add_global_p()
summary(lmer)
lm2_all <- lm(PSFR ~ Age + Sex + BMI + WaisttoHip + YearsRunning + CurrPain +
HistoryPain + VISAA + CSA + Neovascularization + KneeWall +
HeelRaise,
data = tendonna2
)
Anova(lm2_all)
lmer_all <- lmer(PSFR ~ Age + Sex + BMI + WaisttoHip + YearsRunning + CurrPain +
HistoryPain + VISAA + CSA + Neovascularization + KneeWall +
HeelRaise + (1|SubjectID),
data = tendonna2
)
Anova(lmer_all)
Anova(lmer_all, type = "F")
Anova(lmer_all, test.statistic = "F")
model_diagram(lmer_all, heightval = 800)
model_diagram(lmer_all)
model_diagram(lmer_all, heightVal = 800)
lmer_site <- lmer(PSFR ~ Age + Sex + BMI + WaisttoHip + YearsRunning + CurrPain +
HistoryPain + VISAA + CSA + Neovascularization + KneeWall +
HeelRaise + (1|Location/SubjectID),
data = tendonna2
)
model_diagram(lmer_site, heightVal = 800)
(0.002082 + 0.015759)/(0.002082 + 0.015759 + 0.011038)
summary(lmer_site)
Anova(lmer_site, test.statistic = "F")
library(readxl)
moth <- read_excel("moths.xlsx",
sheet = "complete_dataset_MAIN FAMILIES.",
na = "NA")
library(lubridate)
moth <- moth %>% mutate(Date = factor(ymd(Date))) %>% dplyr::select(-Sunset_time)
moth2 <- moth %>% drop_na(Date, ID, Location, Treatment, Treatment_y_n, Colour, Spectra, Moon_Phase, Temp, Wind_speed_ms, Humidity, Common_name, Latin_name, Family, Sub_family, Latency) #Slight change from prior HW to keep more observations!
moth2 <- moth2 %>% mutate(Treatment = fct_recode(factor(Treatment),
"Cold Phosphor" = "1",
"Warm Phosphor" = "2",
"Cold RGB" = "3",
"Warm RGB" = "4"), #5 recoding not needed - controls dropped
logLatency = log(Latency),
Colour = factor(Colour),
Spectra = factor(Spectra))
tally(Date ~ Location, data = moth2)
moth2 %>% dplyr::select(Date, Location) %>% mutate(Location = factor(Location)) %>%
alluvial_wide(fill_by = "last_variable")
lmerLD <- lmer(logLatency ~ Moon_Phase + Colour + Spectra + Wind_speed_ms+ Family+ (1|Location/Date), data = moth2)
lmerDL <- lmer(logLatency ~ Moon_Phase + Colour + Spectra + Wind_speed_ms+ Family+ (1|Date/Location), data = moth2)
model_diagram(lmerLD, heightVal = 700)
model_diagram(lmerDL, heightVal = 700)
model_diagram(lmerLD, heightVal = 700)
model_diagram(lmerDL, heightVal = 700)
model_diagram(lmerLD, heightVal = 700)
model_diagram(lmerDL, heightVal = 700)
summary(lmerLD)
Anova(lmerLD, test.statistic = "F")
r.squaredGLMM(lmer3)
summary(lmerLD)
r.squaredGLMM(lmer3)
r.squaredGLMM(lmerLD)
r.squared(lmerLD)
r.squaredLMER(lmerLD)
r.squaredGLMM(lmerLD)
summary(lmerLD)
lmerLD %>% tbl_regression(intercept = T)
Anova(lmerLD, test.statistic = "F")
lmerLD %>% tbl_regression(intercept = T)
summary(lmerLD)
summary(lmerLD)
